{"version":3,"sources":["mountaincity2.jpg","components/Home.js","Create.jpg","components/PartyCreationForm.js","RegisterBuilding2.jpg","components/Registration.js","LoginBuildings.jpg","components/Login.js","components/UpdateParty.js","components/PartiesOfUser.js","components/admin.js","components/Logout.js","components/Adminpanel.js","App.js","reportWebVitals.js","index.js"],"names":["Home","navStyle","color","sectionStyle","width","height","backgroundImage","Background","backgroundPosition","backgroundSize","document","title","className","style","console","log","localStorage","getItem","to","class","initialState","name","theme","date_time","dress_code","comments","nameError","nameError2","timeError","emailError","passwordError","redirect","PartyCreationForm","state","handleChange","event","setState","target","value","handleChangeTheme","handleChangeDateTime","handleChangeDressCode","handleChangeComments","validate","data","length","props","parties","i","handleSubmit","preventDefault","main","textAlign","overflowY","padding","whitespace","Label","placeholder","this","onChange","fontSize","value1","id","type","value2","value3","cols","value4","onClick","trim","a","myToken","party","fetch","method","headers","replace","body","JSON","stringify","response","ok","onNewParty","history","push","status","clear","React","Component","Forbid","withRouter","nameErrorPass","nameErrorEmail","nameErrorEmail2","Registration","handleChangePass","password","handleChangeEmail","email","includes","Login","json","token","setItem","UpdateParty","window","location","reload","idname","NoParty","PartiesOfUser","useState","count","setCount","party_list","setUsrParty","useEffect","then","Container","marginTop","List","map","usrparty","Item","margin","backgroundColor","Header","Content","admin","size","Logout","b","Forbid2","Adminpanel","users","href","curPage","filter","usr","public_id","block_user","restricted","App","setParties","path","exact","component","currentParties","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6cc99780.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mountaincity2.bd0ea919.jpg\";","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport Background from '../mountaincity2.jpg';\r\n\r\nconst TITLE=\"PartyNow!🎉\"\r\nfunction Home() {\r\n    const navStyle = {\r\n\r\n        color: 'white'\r\n    }\r\n    let sectionStyle = {\r\n        width: \"100%\",\r\n        height: \"960px\",\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover'\r\n\r\n\r\n    };\r\n    document.title = TITLE\r\n\r\n\r\n    return (\r\n\r\n        // <div >\r\n        //     <h1>Home page with button to create a Party</h1>\r\n        // </div>\r\n        <section className='test' style={sectionStyle}>\r\n            <div >\r\n\r\n                <nav>\r\n                    {/* <h3>Logo</h3> */}\r\n                    <ul className=\"nav-links\">\r\n\r\n                        {console.log(\"HERE TOKEN\", localStorage.getItem('myToken'))}\r\n                        {\r\n                            !(localStorage.getItem('myToken')) ?\r\n\r\n                                <Link style={navStyle} to='/Registration'>\r\n                                    <li>Registration</li>\r\n                                </Link> : null\r\n                        }\r\n                        {\r\n                            !(localStorage.getItem('myToken')) ?\r\n                                <Link style={navStyle} to='/Login'>\r\n                                    <li>Login</li>\r\n                                </Link>\r\n                                : null\r\n\r\n                        }\r\n\r\n                        {\r\n                            !(localStorage.getItem('myToken')) ? null :\r\n\r\n                                <Link style={navStyle} to='/Logout'>\r\n                                    <li>Logout</li>\r\n                                </Link>\r\n\r\n                        }\r\n\r\n                        {\r\n                            !(localStorage.getItem('myToken')) ? null : <Link style={navStyle} to='/PartiesOfUser'>\r\n\r\n                                {/* {typeof (localStorage.getItem('myToken')) === undefined ? <div>Zdarova</div> : <li>Your Parties</li>} */}\r\n                                <li>Your Parties</li>\r\n                            </Link>\r\n                        }\r\n\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"wrapper\">\r\n\r\n                    {\r\n                        !(localStorage.getItem('myToken')) ? null :\r\n                            <Link to=\"/PartyCreationForm\">\r\n                                <button class=\"PartyCreationbutton\">\r\n                                    create a Party!\r\n                        </button>\r\n                            </Link>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/Create.abffce73.jpg\";","import React from \"react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nimport Background from '../Create.jpg';\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    theme: \"\",\r\n    date_time: \"\",\r\n    dress_code: \"\",\r\n    comments: \"\",\r\n    nameError: \"\",\r\n\r\n    nameError2: \"\", ///////////!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    timeError: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    redirect: false\r\n};\r\n//let Gcopyvalue = \"\";\r\n\r\nclass PartyCreationForm extends React.Component {\r\n    state = initialState;\r\n\r\n\r\n\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    handleChangeTheme = event => {\r\n        this.setState({ theme: event.target.value });\r\n    };\r\n    handleChangeDateTime = event => {\r\n        this.setState({ date_time: event.target.value });\r\n    };\r\n\r\n\r\n\r\n    handleChangeDressCode = event => {\r\n        this.setState({ dress_code: event.target.value });\r\n    };\r\n\r\n    handleChangeComments = event => {\r\n        this.setState({ comments: event.target.value });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // handleSubmit = () => {\r\n    //     console.log(this.state);\r\n    // };\r\n    validate = () => {\r\n        let data = localStorage.getItem('myToken')\r\n        console.log(typeof (data)) //!!!!!!!!!!!!!!! тут можно проверять тайм-аут токена\r\n        let nameError = \"\";\r\n        let timeError = \"\";\r\n        let nameError2 = \"\"; ////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n        // let passwordError = \"\";\r\n\r\n        if (!this.state.name) {\r\n            nameError = \"name cannot be blank\";\r\n        }\r\n        if (!this.state.date_time) {\r\n            timeError = \"time should be chosen\"\r\n        }\r\n\r\n        // if (!this.state.email.includes(\"@\")) {\r\n        //   emailError = \"invalid email\";\r\n        // }\r\n        if (this.state.name.length > 80) {\r\n            nameError = \"Name of the party cannot be that long\"\r\n        }\r\n        console.log(\"VALIDATE\", this.props.parties)\r\n\r\n        //console.log(\"VALIDATE\", this.props.parties[0].title)\r\n        console.log(\"The length\", this.props.parties.length)\r\n\r\n        if (this.props.parties.length) {\r\n            for (let i = 0; i < this.props.parties.length; i++) {\r\n                if (this.state.name === this.props.parties[i].title) {\r\n                    console.log(\"DUPLICATE name\")\r\n                    nameError = \"This name of the party is already in use.Pick another one\"\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (nameError || timeError) {\r\n            this.setState({ nameError });\r\n            this.setState({ timeError });\r\n            this.setState({ nameError2 }); ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            //console.log(this.state);\r\n            // clear form\r\n            this.setState(initialState);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n\r\n        // if (this.state.redirect) {\r\n        //     console.log(\"Redirect\");\r\n        //     return (\r\n        //         <Redirect to=\"/\" />\r\n        //     )\r\n        // }\r\n        let sectionStyle = {\r\n            overflowY: \"scroll\",\r\n            textAlign: \"center\",\r\n            padding: \"150px\",//\"350px 300px\"\r\n            whitespace: \"nowrap\",\r\n        }\r\n        let main = {\r\n            width: \"100%\",\r\n            height: \"965px\",\r\n            backgroundImage: `url(${Background})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            textAlign: \"center\"\r\n\r\n        }\r\n\r\n        return (\r\n\r\n            <div >\r\n\r\n                {\r\n                    !(localStorage.getItem('myToken')) ? <Forbid /> :\r\n                        <div>\r\n                            <section style={main}>\r\n                                <div class=\"ui form\" style={sectionStyle}>\r\n                                    <Label>\r\n                                        <div class=\"fields\">\r\n                                            <div class=\"field\">\r\n                                                <Label> Party Title\r\n                                            <div class=\"ui left icon input\">\r\n                                                        <input\r\n                                                            placeholder=\"Party Title\"\r\n                                                            value={this.state.name}\r\n                                                            //Gcopyvalue={this.state.name}\r\n                                                            onChange={this.handleChange}\r\n                                                        //{...console.log(this.state)}\r\n                                                        />\r\n                                                        <i class=\"glass martini icon\"></i>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                                            {this.state.nameError}\r\n                                                        </div>\r\n                                                        <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                                            {this.state.nameError2}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </Label>\r\n                                            </div>\r\n                                            <div class=\"field\">\r\n                                                <Label > The theme of the party\r\n                                    <div class=\"ui left icon input\">\r\n                                                        <input\r\n                                                            placeholder=\"Theme of the party\"\r\n                                                            value1={this.state.theme}\r\n                                                            onChange={this.handleChangeTheme}\r\n                                                        />\r\n                                                        <i class=\"bookmark icon\"></i>\r\n                                                    </div>\r\n                                                </Label>\r\n                                            </div>\r\n                                            <div class=\"field\">\r\n                                                <Label > Enter a date and time for your party booking:\r\n                                    <div class=\"ui left icon input\">\r\n                                                        <input id=\"party\" type=\"datetime-local\" name=\"partydate\"\r\n                                                            value2={this.state.date_time}\r\n                                                            onChange={this.handleChangeDateTime}\r\n                                                        />\r\n                                                        <i class=\"calendar alternate icon\"></i>\r\n                                                    </div>\r\n                                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                                        {this.state.timeError}\r\n                                                    </div>\r\n                                                </Label>\r\n                                            </div>\r\n                                            <div class=\"field\">\r\n                                                <Label> Dress code\r\n                                    <div class=\"ui left icon input\">\r\n                                                        <input\r\n                                                            placeholder=\"dress-code for yoyr party\"\r\n                                                            value3={this.state.dress_code}\r\n                                                            onChange={this.handleChangeDressCode}\r\n                                                        />\r\n                                                        <i class=\"pied piper hat icon\"></i>\r\n                                                    </div>\r\n                                                </Label>\r\n                                            </div>\r\n                                            <div class=\"field\">\r\n                                                <Label>Party rules\r\n                                        <textarea name=\"rules\" cols=\"10\"\r\n                                                        placeholder=\"кодес тусовки!!\"\r\n                                                        value4={this.state.comments}\r\n                                                        onChange={this.handleChangeComments}\r\n                                                    />\r\n                                                </Label>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <button class=\"ui black submit button\"\r\n\r\n                                            //onClick={this.handleSubmit}>\r\n                                            onClick={() => {\r\n                                                //preventDefault();\r\n                                                const isValid = this.validate();\r\n                                                if (isValid) {\r\n                                                    this.setState(initialState);  ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n                                                    //console.log(this.state);\r\n                                                    console.log(\"ture\");\r\n\r\n                                                    // clear form\r\n                                                    //this.setState(initialState);\r\n                                                    //this.state.redirect = true\r\n                                                    this.state.name = this.state.name.trim()\r\n\r\n                                                    let title = this.state.name\r\n                                                    let theme = this.state.theme\r\n                                                    let date_time = this.state.date_time\r\n                                                    let dress_code = this.state.dress_code\r\n                                                    let comments = this.state.comments\r\n\r\n                                                    console.log(title);\r\n                                                    console.log(theme);\r\n                                                    console.log(date_time);\r\n                                                    console.log(dress_code);\r\n                                                    console.log(comments);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                    (async () => {\r\n                                                        let myToken = localStorage.getItem('myToken')\r\n                                                        const party = { title, theme, date_time, dress_code, comments };\r\n                                                        const response = await fetch(\"/api/add_new_party\", {\r\n                                                            method: \"POST\",\r\n                                                            headers: {\r\n                                                                \"Content-Type\": \"application/json\",\r\n                                                                \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                                            },\r\n                                                            body: JSON.stringify(party)\r\n                                                        });\r\n                                                        console.log(\"HERE1\")\r\n\r\n\r\n                                                        if (response.ok) {\r\n                                                            console.log(\"response worked!\");\r\n                                                            this.props.onNewParty(party)\r\n                                                            //window.location.reload();//!!!\r\n                                                            this.props.history.push('/')\r\n                                                        }\r\n                                                        else if (response.status == 403) {\r\n                                                            console.log(\"ERRORR\");\r\n                                                            //let errno = response.statusText\r\n                                                            //alert(errno)\r\n                                                            let nameError2 = \"Restricted for this User \" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                                        }\r\n                                                        else if (response.status == 423) {\r\n                                                            localStorage.clear()\r\n                                                            this.props.history.push('/Login')\r\n                                                        }\r\n                                                    })()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                }\r\n\r\n                                            }\r\n\r\n                                            }>\r\n\r\n                                            Create Party!\r\n                                    </button>\r\n\r\n                                    </Label>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                }\r\n            </div >\r\n        );\r\n    }\r\n}\r\nconst Forbid = () => (\r\n    <div>\r\n        <h1>\r\n            Forbidden. You should login first!\r\n        </h1>\r\n    </div>\r\n)\r\n\r\nexport default withRouter(PartyCreationForm)\r\n","export default __webpack_public_path__ + \"static/media/RegisterBuilding2.ad454e25.jpg\";","\r\n\r\nimport React from \"react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Background from '../RegisterBuilding2.jpg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    //name: \"\",\r\n    // password: \"\",\r\n    nameError: \"\",\r\n    nameError2: \"\", ///////////!!!!!!!!!!!!!!!!!!!!!\r\n    nameErrorPass: \"\",\r\n    nameErrorEmail: \"\",\r\n    nameErrorEmail2: \"\"\r\n\r\n};\r\n//let Gcopyvalue = \"\";\r\n\r\nclass Registration extends React.Component {\r\n    state = initialState;\r\n\r\n\r\n\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    handleChangePass = event => {\r\n        this.setState({ password: event.target.value });\r\n    };\r\n    handleChangeEmail = event => {\r\n        this.setState({ email: event.target.value });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // handleSubmit = () => {\r\n    //     console.log(this.state);\r\n    // };\r\n    validate = () => {\r\n        let nameError = \"\";\r\n        let nameError2 = \"\"; ////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        let nameErrorPass = \"\"\r\n        let nameErrorEmail = \"\"\r\n        let nameErrorEmail2 = \"\"\r\n\r\n        // let passwordError = \"\";\r\n\r\n        if (!this.state.name) {\r\n            nameError = \"Username can not be blank\";\r\n        }\r\n\r\n        if (this.state.name && this.state.name.length > 80) {\r\n            nameError = \"Username can not be that long\"\r\n        }\r\n\r\n        //console.log(\"VALIDATE\", this.props.parties[0].title)\r\n        if (!this.state.password) {\r\n            nameErrorPass = \"Password cannot be blank\";\r\n        }\r\n\r\n        if (this.state.password && this.state.password.length > 80) {\r\n            nameErrorPass = \"User's password can not be that long\"\r\n        }\r\n\r\n        if (!this.state.email) {\r\n            nameErrorEmail = \"User's email can not be blank\"\r\n        }\r\n        if (this.state.email && (!this.state.email.includes(\"@\") || !this.state.email.includes(\".\"))) {\r\n            nameErrorEmail = \"This is not an email\"\r\n        }\r\n        if (this.state.email && this.state.email.length > 80) {\r\n            nameErrorEmail = \"User's email can not be that long\"\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (nameError || nameErrorPass || nameErrorEmail) {\r\n            this.setState({ nameError });\r\n            this.setState({ nameError2 }); ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n            this.setState({ nameErrorPass })\r\n            this.setState({ nameErrorEmail })\r\n            this.setState({ nameErrorEmail2 })\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            //console.log(this.state);\r\n            // clear form\r\n            this.setState(initialState);\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let sectionStyle = {\r\n            textAlign: \"center\",\r\n            padding: \"350px 300px\"\r\n        }\r\n        let main = {\r\n            width: \"100%\",\r\n            height: \"965px\",\r\n            backgroundImage: `url(${Background})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            textAlign: \"center\"\r\n\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <section style={main}>\r\n                <div class=\"ui form\" style={sectionStyle}>\r\n                    <Label>\r\n                        <div class=\"field\">\r\n                            <Label>Username\r\n                        <div class=\"ui left icon input\">\r\n                                    <input\r\n                                        placeholder=\"Username\"\r\n                                        value={this.state.name}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChange}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"user icon\"></i>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameError}\r\n                                    </div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameError2}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Label>\r\n                        </div>\r\n                        {/* !!!!!!!!!!!!!! */}\r\n                        <div class=\"field\">\r\n                            <Label >Password\r\n                        <div class=\"ui left icon input\">\r\n                                    <input type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChangePass}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"lock icon\"></i>\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameErrorPass}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Label>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <Label> User Email\r\n                        <div class=\"ui left icon input\">\r\n                                    <input\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChangeEmail}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"envelope icon\"></i>\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameErrorEmail}\r\n                                    </div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameErrorEmail2}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Label>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <button class=\"ui blue submit button\"\r\n\r\n                            //onClick={this.handleSubmit}>\r\n                            onClick={() => {\r\n                                //preventDefault();\r\n                                const isValid = this.validate();\r\n                                if (isValid) {\r\n                                    this.setState(initialState);  ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n                                    this.state.name = this.state.name.trim()\r\n\r\n                                    let name = this.state.name\r\n                                    let password = this.state.password\r\n                                    let email = this.state.email\r\n\r\n\r\n                                    console.log(name);\r\n\r\n                                    (async () => {\r\n                                        const data = { name, password, email };\r\n                                        const response = await fetch(\"/api/user\", {\r\n                                            method: \"POST\",\r\n                                            headers: {\r\n                                                \"Content-Type\": \"application/json\"\r\n                                            },\r\n                                            body: JSON.stringify(data)\r\n                                        });\r\n                                        console.log(\"HERE1\")\r\n\r\n\r\n                                        if (response.ok) {\r\n                                            console.log(\"response worked!\");\r\n                                            this.props.history.push('/')\r\n                                        }\r\n                                        else if (response.status == 401) {\r\n                                            console.log(\"ERRORR\");\r\n                                            let nameError2 = \"Duplicate name,choose another one\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n                                            //alert(\"WRONG\")\r\n                                        }\r\n                                        else if (response.status == 403) {\r\n                                            let nameErrorEmail2 = \"Email already in use\"\r\n                                            this.setState({ nameErrorEmail2 })\r\n                                        }\r\n                                    })()\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            }>\r\n\r\n                            Register\r\n                    </button>\r\n                    </Label>\r\n                </div >\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration\r\n","export default __webpack_public_path__ + \"static/media/LoginBuildings.7aeb152d.jpg\";","\r\n\r\nimport React from \"react\";\r\n\r\n//import '../Login.css';\r\nimport { Container, Label } from \"semantic-ui-react\";\r\nimport Background from '../LoginBuildings.jpg';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    //name: \"\",\r\n    // password: \"\",\r\n    nameError: \"\",\r\n    nameError2: \"\", ///////////!!!!!!!!!!!!!!!!!!!!!\r\n\r\n};\r\n//let Gcopyvalue = \"\";\r\n\r\nclass Login extends React.Component {\r\n    state = initialState;\r\n\r\n\r\n\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    handleChangePass = event => {\r\n        this.setState({ password: event.target.value });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // handleSubmit = () => {\r\n    //     console.log(this.state);\r\n    // };\r\n    validate = () => {\r\n        let nameError = \"\";\r\n        let nameError2 = \"\"; ////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        // let passwordError = \"\";\r\n\r\n        if (!this.state.name) {\r\n            nameError = \"Username can not be blank\";\r\n        }\r\n\r\n        if (this.state.name) {\r\n\r\n            if (this.state.name.length > 80) {\r\n                nameError = \"Username cannot be that long\"\r\n            }\r\n        }\r\n\r\n        //console.log(\"VALIDATE\", this.props.parties[0].title)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (nameError) {\r\n            this.setState({ nameError });\r\n            this.setState({ nameError2 }); ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            //console.log(this.state);\r\n            // clear form\r\n            this.setState(initialState);\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let sectionStyle = {\r\n            textAlign: \"center\",\r\n            padding: \"350px 300px\"\r\n        }\r\n        let main = {\r\n            width: \"100%\",\r\n            height: \"965px\",\r\n            backgroundImage: `url(${Background})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            textAlign: \"center\"\r\n\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <section style={main}>\r\n\r\n                <div className=\"ui form\" style={sectionStyle} >\r\n                    <Label>\r\n                        <div class='field'>\r\n                            <Label>Username\r\n                        <div class=\"ui left icon input\">\r\n                                    <input\r\n                                        placeholder=\"Username\"\r\n                                        value={this.state.name}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChange}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"user icon\"></i>\r\n\r\n                                </div>\r\n                                <div class=\"horizontal\">\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameError}\r\n                                    </div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameError2}\r\n                                    </div>\r\n                                </div>\r\n                            </Label>\r\n                        </div>\r\n                        {/* !!!!!!!!!!!!!! */}\r\n                        <div class=\"field\" >\r\n                            <Label> Password\r\n                        <div class=\"ui left icon input\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChangePass}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"lock icon\"></i>\r\n                                </div>\r\n                            </Label>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <button class=\"ui blue submit button\"\r\n\r\n                            //onClick={this.handleSubmit}>\r\n                            onClick={() => {\r\n                                //preventDefault();\r\n                                const isValid = this.validate();\r\n                                if (isValid) {\r\n                                    this.setState(initialState);  ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n                                    this.state.name = this.state.name.trim()\r\n\r\n                                    let name = this.state.name\r\n                                    let password = this.state.password\r\n\r\n\r\n                                    console.log(name);\r\n\r\n                                    (async () => {\r\n                                        const data = { name, password };\r\n                                        const response = await fetch(\"/api/login\", {\r\n                                            method: \"POST\",\r\n                                            headers: {\r\n                                                \"Content-Type\": \"application/json\"\r\n                                            },\r\n                                            body: JSON.stringify(data)\r\n                                        });\r\n                                        console.log(\"HERE1\")\r\n\r\n\r\n                                        if (response.ok) {\r\n                                            console.log(\"response worked!\");\r\n                                            let token = await response.json();\r\n                                            //let ex_token = token[\"token\"]\r\n                                            //console.log(ex_token)\r\n                                            //console.log(JSON.stringify(token));\r\n                                            console.log((token[\"token\"]))\r\n\r\n                                            // write to storage\r\n                                            localStorage.setItem('myToken', token[\"token\"]);\r\n                                            //console.log(\"Hello token\")\r\n                                            //alert(localStorage.getItem('myToken'))\r\n\r\n                                            this.props.history.push('/')\r\n                                        }\r\n                                        else if (response.status == 401) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"Incorrect password or login\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n                                        else if (response.status == 403) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"Incorrect password or login\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n                                        else if (response.status == 406) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"No email confirmation\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n                                        else if (response.status == 410) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"The user is blocked\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n\r\n                                    })()\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            }>\r\n\r\n                            Login\r\n                    </button>\r\n                    </Label>\r\n                </div >\r\n\r\n            </section>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from \"react\";\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { Label } from \"semantic-ui-react\";\r\n// class UpdateParty extends Component {\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {this.props.id}\r\n//             </div>\r\n//         )\r\n//     };\r\n\r\n\r\n\r\n\r\n\r\n\r\n// }\r\n// export default UpdateParty\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    theme: \"\",\r\n    date_time: \"\",\r\n    dress_code: \"\",\r\n    comments: \"\",\r\n    nameError: \"\",\r\n    timeError: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    redirect: false\r\n};\r\n//let Gcopyvalue = \"\";\r\n\r\nclass UpdateParty extends React.Component {\r\n    state = initialState;\r\n\r\n\r\n\r\n\r\n\r\n    handleChangeTheme = event => {\r\n        this.setState({ theme: event.target.value });\r\n    };\r\n    handleChangeDateTime = event => {\r\n        this.setState({ date_time: event.target.value });\r\n    };\r\n\r\n\r\n\r\n    handleChangeDressCode = event => {\r\n        this.setState({ dress_code: event.target.value });\r\n    };\r\n\r\n    handleChangeComments = event => {\r\n        this.setState({ comments: event.target.value });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // handleSubmit = () => {\r\n    //     console.log(this.state);\r\n    // };\r\n    validate = () => {\r\n        let data = localStorage.getItem('myToken')\r\n        console.log(typeof (data)) //!!!!!!!!!!!!!!! тут можно проверять тайм-аут токена\r\n        let nameError = \"\";\r\n        let timeError = \"\";\r\n        // let passwordError = \"\";\r\n\r\n\r\n        if (!this.state.date_time) {\r\n            timeError = \"time should be chosen\"\r\n        }\r\n\r\n        // if (!this.state.email.includes(\"@\")) {\r\n        //   emailError = \"invalid email\";\r\n        // }\r\n\r\n\r\n        //console.log(\"VALIDATE\", this.props.parties[0].title)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (timeError) {\r\n            this.setState({ timeError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            //console.log(this.state);\r\n            // clear form\r\n            this.setState(initialState);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n\r\n        // if (this.state.redirect) {\r\n        //     console.log(\"Redirect\");\r\n        //     return (\r\n        //         <Redirect to=\"/\" />\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n\r\n\r\n            <Label >\r\n                <div class=\"ui form\">\r\n                    <div class=\"fields\" >\r\n                        <div class=\"field\">\r\n                            <Label > New theme of the party\r\n                        <input\r\n                                    placeholder=\"New theme\"\r\n                                    value1={this.state.theme}\r\n                                    onChange={this.handleChangeTheme}\r\n                                />\r\n                            </Label>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <Label > New date time of the party\r\n                        <input id=\"party\" type=\"datetime-local\" name=\"partydate\"\r\n                                    value2={this.state.date_time}\r\n                                    onChange={this.handleChangeDateTime}\r\n                                />\r\n                                <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                    {this.state.timeError}\r\n                                </div>\r\n                            </Label>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <Label > New dress code\r\n                        <input\r\n                                    placeholder=\"dress-code\"\r\n                                    value3={this.state.dress_code}\r\n                                    onChange={this.handleChangeDressCode}\r\n                                />\r\n                            </Label>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <textarea\r\n                                placeholder=\"new party rules\"\r\n                                value4={this.state.comments}\r\n                                onChange={this.handleChangeComments}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button class=\"ui black submit button\"\r\n\r\n                        //onClick={this.handleSubmit}>\r\n                        onClick={() => {\r\n                            //preventDefault();\r\n                            const isValid = this.validate();\r\n                            if (isValid) {\r\n                                //console.log(this.state);\r\n                                console.log(\"ture\");\r\n\r\n                                // clear form\r\n                                //this.setState(initialState);\r\n                                //this.state.redirect = true\r\n\r\n                                let theme = this.state.theme\r\n                                let date_time = this.state.date_time\r\n                                let dress_code = this.state.dress_code\r\n                                let comments = this.state.comments\r\n\r\n                                console.log(theme);\r\n                                console.log(date_time);\r\n                                console.log(dress_code);\r\n                                console.log(comments);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                (async () => {\r\n                                    let myToken = localStorage.getItem('myToken')\r\n                                    const party = { theme, date_time, dress_code, comments };\r\n                                    const response = await fetch(\"/api/ch_party/\" + this.props.id, {\r\n                                        method: \"PUT\",\r\n                                        headers: {\r\n                                            \"Content-Type\": \"application/json\",\r\n                                            \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                        },\r\n                                        body: JSON.stringify(party)\r\n                                    });\r\n                                    console.log(\"HERE1\")\r\n\r\n\r\n                                    if (response.ok) {\r\n                                        console.log(\"response worked!\");\r\n\r\n                                        window.location.reload();//!!!\r\n                                    }\r\n                                    else if (response.status === 423) {\r\n                                        localStorage.clear()\r\n                                        this.props.history.push('/Login')\r\n                                        console.log(\"ERRORR\");\r\n                                    }\r\n                                })()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        }>\r\n\r\n                        Update\r\n                    </button>\r\n\r\n                </div >\r\n            </Label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UpdateParty)\r\n","import React from \"react\";\r\nimport { List, Header, Rating } from \"semantic-ui-react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { useEffect, useState } from 'react';\r\nimport UpdateParty from './UpdateParty'\r\n\r\nlet idname = 0\r\nlet a = 0 //если приходит не залогиненный\r\nexport const PartiesOfUser = props/*party_list , onDelParty*/ => {\r\n\r\n\r\n    const [count, setCount] = useState(0);\r\n    //const [name, setName] = useState(-1);\r\n\r\n    const [party_list, setUsrParty] = useState([]);\r\n    useEffect(() => {\r\n        let myToken = localStorage.getItem('myToken')\r\n        if (!myToken) {\r\n            console.log(\"My token is \", myToken)\r\n            a = 1\r\n        }\r\n        else {\r\n            fetch(\"/api/party_by_user\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                }\r\n            }).then(response => {\r\n                if (response.status === 423) {\r\n                    props.history.push('/Login')\r\n                }\r\n                else {\r\n                    response.json().then(data => {\r\n                        setUsrParty(data.party_list);\r\n                    })\r\n                }\r\n            }\r\n            );\r\n        }\r\n    }, []);\r\n    // var colours = [\"#80A2CB\", \"#67CF24\", \"#F3ED2F\", \"#F32F4D\"];\r\n\r\n    // function getRandomIntInclusive(min, max) {\r\n    //     min = Math.ceil(min);\r\n    //     max = Math.floor(max);\r\n    //     return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n    // }\r\n\r\n    return (\r\n        <div /*style={{ backgroundColor: \"#80A2CB\"\"#C0D1E6\" }}*/>\r\n            {a === 1 ? <Forbid /> : !(party_list.length) ? <NoParty /> :\r\n                <Container style={{ marginTop: -250 }}>\r\n                    <List >\r\n                        {party_list.map(usrparty => {\r\n                            return (\r\n                                <div class=\"ui massive form\">\r\n\r\n                                    <List.Item style={{ margin: 250 }} key={usrparty.title}>\r\n\r\n                                        <List style={{ backgroundColor: \"#80A2CB\", textAlign: \"left\", width: \"200%\", }}>\r\n                                            <Header>{usrparty.title}</Header>\r\n                                            <List.Item>\r\n                                                <List.Content>\r\n                                                    <List.Header>Theme: {usrparty.theme}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                            <List.Item>\r\n                                                <List.Content>\r\n                                                    <List.Header>Date time: {usrparty.date_time.replace('T', '   ')}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                            <List.Item>\r\n                                                <List.Content>\r\n                                                    <List.Header>Dress code: {usrparty.dress_code}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n                                            <List.Item>\r\n                                                <List.Content>\r\n                                                    <List.Header>Comments: {usrparty.comments}</List.Header>\r\n                                                </List.Content>\r\n                                            </List.Item>\r\n\r\n\r\n                                            {/* </List> */}\r\n                                            {/* <List.Content>\r\n                                            <List.Description>{\"Party theme:\"}{usrparty.theme}</List.Description>\r\n                                            <List.Description>{usrparty.date_time}</List.Description>\r\n                                            <List.Description>{usrparty.dress_code}</List.Description>\r\n                                            <List.Description>{usrparty.comments}</List.Description>\r\n                                        </List.Content> */}\r\n\r\n\r\n                                            {/* <Rating rating={usrparty.rating} maxRating={5} disabled /> */}\r\n                                            <button\r\n\r\n                                                onClick={() => {\r\n                                                    (async () => {\r\n                                                        let myToken = localStorage.getItem('myToken')\r\n                                                        const response = await fetch(\"/api/del_party/\" + usrparty.id, {\r\n                                                            method: \"DELETE\",\r\n                                                            headers: {\r\n                                                                \"Content-Type\": \"application/json\",\r\n                                                                \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                                            }\r\n                                                        });\r\n                                                        console.log(\"HERE1\")\r\n\r\n\r\n                                                        if (response.ok) {\r\n                                                            console.log(\"response worked -DELETED!\");\r\n\r\n                                                            //onDelParty(usrparty)\r\n                                                            window.location.reload();\r\n\r\n                                                        }\r\n                                                        else if (response.status === 423) {\r\n                                                            localStorage.clear()\r\n                                                            props.history.push('/Login')\r\n                                                            console.log(\"ERRORR\");\r\n                                                        }\r\n                                                    })()\r\n\r\n                                                }}>Delete\r\n\r\n                            </button>\r\n\r\n\r\n                                            <button onClick={() => {\r\n                                                //setName(name + 1)\r\n                                                if (count == 0) {\r\n                                                    setCount(count + 1)\r\n                                                    //setName(0);\r\n                                                }\r\n                                                else if (count == 1) {\r\n                                                    setCount(count - 1)\r\n                                                    //setName(0);\r\n\r\n\r\n                                                }\r\n\r\n                                                //setName(name + usrparty.id)\r\n                                                idname = usrparty.id\r\n\r\n\r\n                                            }}>\r\n                                                Change\r\n                            </button>\r\n                                            <div>\r\n                                                {console.log(\"NameLeft\", idname)}\r\n                                                {console.log(\"NameRight\", usrparty.title)}\r\n\r\n                                                {count === 1 && idname === usrparty.id ? <div> <UpdateParty id={idname} /> </div> : null}\r\n\r\n\r\n                                            </div>\r\n\r\n\r\n                                            {/* <div class=\"ui divider\"></div> */}\r\n                                        </List>\r\n                                        <div class=\"ui divider\"></div>\r\n\r\n                                    </List.Item>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </Container>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst NoParty = () => (\r\n    <div>\r\n        <h1>\r\n            No parties created.Go create some!\r\n        </h1>\r\n    </div>\r\n)\r\nconst Forbid = () => (\r\n    <div>\r\n        <h1>\r\n            You are not logged in!\r\n        </h1>\r\n    </div>\r\n)\r\nexport default PartiesOfUser;","\r\n\r\nimport React from \"react\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\n//import Adminpanel from \"./Adminpanel\"\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    //name: \"\",\r\n    // password: \"\",\r\n    nameError: \"\",\r\n    nameError2: \"\", ///////////!!!!!!!!!!!!!!!!!!!!!\r\n\r\n};\r\n//let Gcopyvalue = \"\";\r\n\r\nclass admin extends React.Component {\r\n    state = initialState;\r\n\r\n\r\n\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    handleChangePass = event => {\r\n        this.setState({ password: event.target.value });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // handleSubmit = () => {\r\n    //     console.log(this.state);\r\n    // };\r\n    validate = () => {\r\n        let nameError = \"\";\r\n        let nameError2 = \"\"; ////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        // let passwordError = \"\";\r\n\r\n        if (!this.state.name) {\r\n            nameError = \"name cannot be blank\";\r\n        }\r\n\r\n        if (this.state.name) {\r\n\r\n            if (this.state.name.length > 80) {\r\n                nameError = \"Your name cannot be that long\"\r\n            }\r\n        }\r\n\r\n        //console.log(\"VALIDATE\", this.props.parties[0].title)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (nameError) {\r\n            this.setState({ nameError });\r\n            this.setState({ nameError2 }); ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            //console.log(this.state);\r\n            // clear form\r\n            this.setState(initialState);\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let sectionStyle = {\r\n            textAlign: \"center\",\r\n            padding: \"350px 300px\"\r\n        }\r\n\r\n        return (\r\n\r\n\r\n            <section>\r\n                <div class=\"ui form\" style={sectionStyle}>\r\n                    {/* <div> */}\r\n                    <Label>\r\n                        <div class=\"field\" >\r\n                            <Label> Admin's name\r\n                        <div class=\"ui left icon input\">\r\n                                    <input size=\"26\"\r\n                                        placeholder=\"Name\"\r\n                                        value={this.state.name}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChange}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"user icon\"></i>\r\n                                </div>\r\n                                <div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameError}\r\n                                    </div>\r\n                                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                                        {this.state.nameError2}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Label>\r\n                        </div>\r\n                        {/* !!!!!!!!!!!!!! */}\r\n                        <div class=\"field\">\r\n                            <Label> Password\r\n                        <div class=\"ui left icon input\">\r\n                                    <input size=\"30\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={this.state.password}\r\n                                        //Gcopyvalue={this.state.name}\r\n                                        onChange={this.handleChangePass}\r\n                                    //{...console.log(this.state)}\r\n                                    />\r\n                                    <i class=\"lock icon\"></i>\r\n                                </div>\r\n                            </Label>\r\n                        </div>\r\n                        {/* </div> */}\r\n\r\n\r\n                        <button class=\"ui blue submit button\"\r\n\r\n                            //onClick={this.handleSubmit}>\r\n                            onClick={() => {\r\n                                //preventDefault();\r\n                                const isValid = this.validate();\r\n                                if (isValid) {\r\n                                    this.setState(initialState);  ////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n                                    this.state.name = this.state.name.trim()\r\n\r\n                                    let name = this.state.name\r\n                                    let password = this.state.password\r\n\r\n\r\n                                    console.log(name);\r\n\r\n                                    (async () => {\r\n                                        const data = { name, password };\r\n                                        const response = await fetch(\"/api/login_adm\", {\r\n                                            method: \"POST\",\r\n                                            headers: {\r\n                                                \"Content-Type\": \"application/json\"\r\n                                            },\r\n                                            body: JSON.stringify(data)\r\n                                        });\r\n                                        console.log(\"HERE1\")\r\n\r\n\r\n                                        if (response.ok) {\r\n                                            console.log(\"response worked!\");\r\n                                            let token = await response.json();\r\n                                            //let ex_token = token[\"token\"]\r\n                                            //console.log(ex_token)\r\n                                            //console.log(JSON.stringify(token));\r\n                                            console.log((token[\"token\"]))\r\n\r\n                                            // write to storage\r\n                                            localStorage.setItem('myToken', token[\"token\"]);\r\n                                            //console.log(\"Hello token\")\r\n                                            //alert(localStorage.getItem('myToken'))\r\n\r\n                                            this.props.history.push('/admin/Adminpanel')\r\n                                            window.location.reload();//!!!\r\n                                        }\r\n                                        else if (response.status === 401) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"Incorrect password or login\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n                                        else if (response.status === 403) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"You are not an admin\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n                                        else if (response.status === 404) {\r\n                                            console.log(\"ERRORR\");\r\n                                            //let errno = response.statusText\r\n                                            //alert(errno)\r\n                                            let nameError2 = \"No such user\" //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                            this.setState({ nameError2 }); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                                        }\r\n\r\n\r\n                                    })()\r\n\r\n\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            }>\r\n\r\n                            Login!\r\n                    </button>\r\n                    </Label>\r\n                </div >\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default admin\r\n","\r\nimport React from \"react\"\r\n\r\n\r\nclass Logout extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {localStorage.clear()}\r\n                {this.props.history.push('/')}\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\nexport default Logout;","import React from \"react\";\r\nimport { List, Header, Rating } from \"semantic-ui-react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { useEffect, useState } from 'react';\r\nlet a = 0 // 1\r\nlet b = 0 //2\r\nexport const Adminpanel = props => {\r\n\r\n\r\n    //const [count, setCount] = useState(0);\r\n    //const [name, setName] = useState(-1);\r\n\r\n    const [users, setUsrParty] = useState([]);\r\n    useEffect(() => {\r\n        let myToken = localStorage.getItem('myToken')\r\n        if (!myToken) {\r\n            console.log(\"My token is \", myToken)\r\n            b = 1;\r\n        }\r\n        else {\r\n            fetch(\"/api/user\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                }\r\n            }).then(response => {\r\n                if (response.status === 403) {\r\n                    a = 1\r\n                    console.log(\"HErer\")\r\n                }\r\n                else {\r\n                    console.log(\"HErer2\")\r\n\r\n                    response.json().then(data => {\r\n                        setUsrParty(data.users);\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n  const [curPage, setPage] = useState(window.location.href);\r\n    useEffect(() => {\r\n        return () => {\r\n            //console.log(\"Here\")\r\n            localStorage.clear()\r\n        }\r\n    }, curPage)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        \r\n            {a === 1 ? <Forbid /> : b === 1 ? <Forbid2 /> :\r\n            <Container style={{ marginTop: -250 }}>\r\n                <List >\r\n                    {/* {console.log(users)} */}\r\n                    {users.filter(function (name) { return name.name != 'Admin' }).map(usr => {\r\n                        return (\r\n                            <div class=\"ui massive form\">\r\n                                <List.Item style={{ margin: 250 }} key={usr.name}>\r\n                                    <List style={{ textAlign: \"left\" }}>\r\n                                        <Header>{usr.name}</Header>\r\n                                        <List.Item>\r\n                                            <List.Content>\r\n                                                <List.Header>Email: {usr.email}</List.Header>\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Content>\r\n                                                <List.Header>Public_id: {usr.public_id}</List.Header>\r\n                                            </List.Content>\r\n                                        </List.Item>\r\n                                        <button class=\"ui black submit button\"\r\n\r\n                                            onClick={() => {\r\n                                                (async () => {\r\n                                                    let myToken = localStorage.getItem('myToken')\r\n                                                    const response = await fetch(\"/api/user/\" + usr.public_id, {\r\n                                                        method: \"PUT\",\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/json\",\r\n                                                            \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                                        }\r\n                                                    });\r\n                                                    console.log(\"HERE1\")\r\n\r\n\r\n                                                    if (response.ok) {\r\n                                                        console.log(\"response worked -Blocked!\");\r\n                                                        console.log(usr.block_user, usr.public_id)\r\n\r\n                                                        //onDelParty(usrparty)\r\n                                                        window.location.reload();\r\n\r\n                                                    }\r\n                                                    else if (response.status === 423) {\r\n                                                        localStorage.clear()\r\n                                                        props.history.push('/admin')\r\n                                                        console.log(\"ERRORR\");\r\n                                                    }\r\n                                                })()\r\n\r\n                                            }}>{!(usr.block_user) ? \"BlockUser\" : \"Unblock User\"}\r\n\r\n                                        </button>\r\n                                        <button class=\"ui black submit button\"\r\n                                            onClick={() => {\r\n                                                (async () => {\r\n                                                    let myToken = localStorage.getItem('myToken')\r\n                                                    const response = await fetch(\"/api/restr_user/\" + usr.public_id, {\r\n                                                        method: \"PUT\",\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/json\",\r\n                                                            \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                                        }\r\n                                                    });\r\n                                                    console.log(\"HERE1\")\r\n\r\n\r\n                                                    if (response.ok) {\r\n                                                        console.log(\"response worked -Restricted!\");\r\n                                                        console.log(usr.restricted, usr.public_id)\r\n\r\n                                                        //onDelParty(usrparty)\r\n                                                        window.location.reload();\r\n\r\n                                                    }\r\n                                                    else if (response.status === 423) {\r\n                                                        localStorage.clear()\r\n                                                        props.history.push('/admin')\r\n                                                        console.log(\"ERRORR\");\r\n                                                    }\r\n                                                })()\r\n\r\n\r\n                                            }}>{!(usr.restricted) ? \"Restrict User\" : \"Unrestrict User\"}\r\n\r\n\r\n                                        </button>\r\n\r\n                                        <button class=\"ui black submit button\"\r\n                                            onClick={() => {\r\n                                                (async () => {\r\n                                                    let myToken = localStorage.getItem('myToken')\r\n                                                    const response = await fetch(\"/api/reset_password/\" + usr.public_id, {\r\n                                                        method: \"PUT\",\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/json\",\r\n                                                            \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                                        }\r\n                                                    });\r\n                                                    console.log(\"HERE1\")\r\n\r\n\r\n                                                    if (response.ok) {\r\n                                                        console.log(\"response worked -ChangedPass!\");\r\n\r\n                                                        //onDelParty(usrparty)\r\n                                                        window.location.reload();\r\n\r\n                                                    }\r\n                                                    else if (response.status === 423) {\r\n                                                        localStorage.clear()\r\n                                                        props.history.push('/admin')\r\n                                                        console.log(\"ERRORR\");\r\n                                                    }\r\n                                                })()\r\n                                            }}>Change Pass\r\n\r\n                                </button>\r\n                                        <button class=\"ui black submit button\"\r\n                                            onClick={() => {\r\n                                                (async () => {\r\n                                                    let myToken = localStorage.getItem('myToken')\r\n                                                    const response = await fetch(\"/api/user/\" + usr.public_id, {\r\n                                                        method: \"DELETE\",\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/json\",\r\n                                                            \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\r\n\r\n                                                        }\r\n                                                    });\r\n                                                    console.log(\"HERE1\")\r\n\r\n\r\n                                                    if (response.ok) {\r\n                                                        console.log(\"response worked -Deleted User!\");\r\n\r\n                                                        //onDelParty(usrparty)\r\n                                                        window.location.reload();\r\n\r\n                                                    }\r\n                                                    else if (response.status === 423) {\r\n                                                        localStorage.clear()\r\n                                                        props.history.push('/admin')\r\n                                                        console.log(\"ERRORR\");\r\n                                                    }\r\n                                                })()\r\n                                            }}>Delete User\r\n\r\n                                </button>\r\n\r\n                                    </List>\r\n\r\n\r\n                                    <div class=\"ui divider\"></div>\r\n\r\n                                </List.Item>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </Container>\r\n            }\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nconst Forbid = () => (\r\n    <div>\r\n        <h1>\r\n            Forbidden. Not allowed.\r\n        </h1>\r\n    </div>\r\n)\r\n\r\nconst Forbid2 = () => (\r\n    <div>\r\n        <h1>\r\n            Forbidden. Not logged in.\r\n        </h1>\r\n    </div>\r\n)\r\n\r\nexport default Adminpanel;","import './App.css';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport PartyCreationForm from './components/PartyCreationForm';\nimport Registration from './components/Registration';\nimport Login from './components/Login';\nimport PartiesOfUser from './components/PartiesOfUser';\nimport admin from './components/admin';\n\nimport { useEffect, useState } from 'react';\nimport Logout from './components/Logout';\nimport Adminpanel from './components/Adminpanel';\n//import PartyCreationForm from './components/PartyCreationForm';\n\n\nfunction App() {\n  const [parties, setParties] = useState([]);\n  // const [party_list, setUsrParty] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/parties\").then(response =>\n      response.json().then(data => {\n        setParties(data.parties);\n      })\n    );\n  }, []);\n\n\n  // useEffect(() => {\n  //   let myToken = localStorage.getItem('myToken')\n  //   fetch(\"/party_by_user\", {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       \"x-access-token\": myToken.replace(/['\"]+/g, '') // убираем лишние кавычки\n\n  //     }\n  //   }).then(response =>\n  //     response.json().then(data => {\n  //       setUsrParty(data.party_list);\n  //     })\n  //   );\n  // }, []);\n\n\n\n\n\n\n  const Wrapper = function (props) {\n    //let data = localStorage.getItem('myToken')\n    //console.log(data.replace(/['\"]+/g, ''))\n    console.log(\"HELLLOO3\", typeof (parties))\n\n    return (<PartyCreationForm  {...props} onNewParty={party => setParties(currentParties => [...currentParties, party])} parties={parties} />);\n  }\n\n  // const WrapperParty = function (props) {\n  //   let data = localStorage.getItem('myToken')\n  //   console.log(\"HELLLOO\", data.replace(/['\"]+/g, ''))\n  //   console.log(\"HELLLOO2\", typeof (party_list))\n\n  //   return (\n  //     //<PartiesOfUser {...props} onDelParty={party => setUsrParty(currentParties => [...currentParties, party])} party_list={party_list} />\n  //     <PartiesOfUser {...props} party_list={party_list} />\n\n  //   );\n  // }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <Nav /> */}\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          {/* <Route path=\"/PartyCreationForm\" component={PartyCreationForm} /> */}\n          <Route path=\"/PartyCreationForm\" component={Wrapper} />\n          <Route path=\"/Registration\" component={Registration} />\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/PartiesOfUser\" component={PartiesOfUser} />\n          <Route path=\"/Logout\" component={Logout} />\n          <Route path=\"/admin\" exact component={admin} />\n          <Route path=\"/admin/Adminpanel\" component={Adminpanel} />\n\n\n          {/* <Route path=\"/about\" component={About} /> */}\n          {/* <Route path=\"/shop\" component={Shop} /> */}\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}